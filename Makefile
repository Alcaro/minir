top_dummy: all

CC = gcc
CFLAGS =
CXX = g++
CXXFLAGS = $(CFLAGS)
LD = g++
LFLAGS =
OBJSUFFIX =

#Native toolchain, aka not cross compiler. Used because parts of minir are autogenerated, and the generator is also written in C.
#The generated file doesn't change between platforms.
NATCC = $(CC)
NATCFLAGS = $(CFLAGS) -std=gnu99
NATCXX = $(CXX)
NATCXXFLAGS = $(CPPFLAGS)
NATLD = $(LD)
NATLFLAGS = $(LFLAGS)

#Windows setup.
WIN_LIB = -lgdi32 -lcomctl32 -lcomdlg32 -ldinput8 -ldxguid -lopengl32 -ldsound
TRUE_CFLAGS = $(CFLAGS)
TRUE_CXXFLAGS = $(CXXFLAGS)
TRUE_LFLAGS = $(LFLAGS) $(WIN_LIB)
EXESUFFIX = .exe
EXTRAOBJ = obj/resource$(OBJSUFFIX).o
RC = windres
RCFLAGS =
obj/resource$(OBJSUFFIX).o: ico/*
	$(RC) $(RCFLAGS) ico/minir.rc obj/resource$(OBJSUFFIX).o

#On Linux, this undoes most of the above. On Windows, this file doesn't exist because 'configure' wasn't executed.
-include Makefile.custom

OUTNAME = minir$(EXESUFFIX)

TESTSRC = memory.c
TESTSEPSRC = test-*.c window-*.c

OBJS = $(patsubst %.c,obj/%$(OBJSUFFIX)1.o,$(wildcard *.c)) $(EXTRAOBJ)
OBJS += $(patsubst %.cpp,obj/%$(OBJSUFFIX)2.o,$(wildcard *.cpp))
TESTOBJS = $(patsubst %.c,obj/%.o,$(wildcard $(TESTSRC))) $(patsubst %.c,obj/%-test.o,$(wildcard $(TESTSEPSRC))) $(EXTRAOBJ)

#Do not use c99; it'll throw an infinity of errors for strdup and strcasecmp on Windows.
TRUE_CFLAGS += -std=gnu99
TRUE_LFLAGS +=


#$(CC) $(TRUE_CFLAGS) -DTEST -DNO_ICON test*.c window*.c $(TRUE_LFLAGS) -otest $(RESOBJ)
test: $(TESTOBJS)
	$(LD) $+ $(TRUE_LFLAGS) -o $@

#On Windows, cleaning up the object directory is expected to be done with a separate batch script.
#The contents are typically
#del /q obj\*
#del minir.exe
clean:
	rm obj/* || true

obj:
	mkdir obj

obj/config$(OBJSUFFIX)1.o: config.c obj/generated.c | obj
obj/main$(OBJSUFFIX)1.o: main.c obj/generated.c minir.h | obj
obj/%$(OBJSUFFIX)1.o: %.c | obj obj/generated.c
	$(CC) $(TRUE_CFLAGS) -c $< -o $@

obj/config$(OBJSUFFIX)2.o: config.cpp obj/generated.c | obj
obj/main$(OBJSUFFIX)2.o: main.cpp obj/generated.c minir.h | obj
obj/%$(OBJSUFFIX)2.o: %.cpp | obj obj/generated.c
	$(CXX) $(TRUE_CXXFLAGS) -c $< -o $@

obj/%-test.o: %.c | obj obj/config.c
	$(CC) $(TRUE_CFLAGS) -c $< -o $@ -DTEST -DNO_ICON

obj/generated.c: obj/rescompile$(EXESUFFIX) minir.cfg.tmpl
	obj/rescompile$(EXESUFFIX)
obj/rescompile$(EXESUFFIX): rescompile.c miniz.c | obj
	$(NATCC) $(NATCFLAGS) $(NATLFLAGS) -DRESCOMPILE rescompile.c miniz.c -o obj/rescompile$(EXESUFFIX)

$(OUTNAME): $(OBJS)
	$(LD) $+ $(TRUE_LFLAGS) -o $@ -lm

all: $(OUTNAME)
